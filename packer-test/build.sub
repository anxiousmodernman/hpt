#!/usr/bin/env sub

# imports are like "source" in bash
import "gobuild", "something/blah", "s3"

# Some funcs can return one or many readers

# index a stream with a tuple. Returns 2 "columns", like a Series object in pandas.
# skip a header row; skip evaluates the stream as line-oriented, split does too.
# line-oriented streams are indexable by default over whitespace-delim
# provide a custom split value to index over a custom delim.
foo, baz = run("git status").skip(1).split("\t")[(0,2)]

# magic globals?
write("blah.txt", git["commit"])

vars = { "Version": git["commit"] }
# build is for go
build("linux", "amd64", static=true, vars=vars)

# go takes an expression, doesn't block, runs the expression async, and returns 
# a channel of the value
ch := go(build("linux", "amd64", static=true, vars=vars))

# blocks
print(<-ch)




