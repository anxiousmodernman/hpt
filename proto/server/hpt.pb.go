// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/hpt.proto

/*
Package server is a generated protocol buffer package.

It is generated from these files:
	proto/hpt.proto

It has these top-level messages:
	ApplyResult
	ApplyResultMetadata
	ApplyResultOutput
	Config
	PlanResult
*/
package server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ApplyResultMetadata_Outcome int32

const (
	ApplyResultMetadata_UNKNOWN   ApplyResultMetadata_Outcome = 0
	ApplyResultMetadata_CHANGED   ApplyResultMetadata_Outcome = 1
	ApplyResultMetadata_UNCHANGED ApplyResultMetadata_Outcome = 2
)

var ApplyResultMetadata_Outcome_name = map[int32]string{
	0: "UNKNOWN",
	1: "CHANGED",
	2: "UNCHANGED",
}
var ApplyResultMetadata_Outcome_value = map[string]int32{
	"UNKNOWN":   0,
	"CHANGED":   1,
	"UNCHANGED": 2,
}

func (x ApplyResultMetadata_Outcome) String() string {
	return proto.EnumName(ApplyResultMetadata_Outcome_name, int32(x))
}
func (ApplyResultMetadata_Outcome) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

// where the output comes from
type ApplyResultOutput_OutputType int32

const (
	ApplyResultOutput_OTHER    ApplyResultOutput_OutputType = 0
	ApplyResultOutput_STDOUT   ApplyResultOutput_OutputType = 1
	ApplyResultOutput_STDERR   ApplyResultOutput_OutputType = 2
	ApplyResultOutput_COMBINED ApplyResultOutput_OutputType = 3
)

var ApplyResultOutput_OutputType_name = map[int32]string{
	0: "OTHER",
	1: "STDOUT",
	2: "STDERR",
	3: "COMBINED",
}
var ApplyResultOutput_OutputType_value = map[string]int32{
	"OTHER":    0,
	"STDOUT":   1,
	"STDERR":   2,
	"COMBINED": 3,
}

func (x ApplyResultOutput_OutputType) String() string {
	return proto.EnumName(ApplyResultOutput_OutputType_name, int32(x))
}
func (ApplyResultOutput_OutputType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

// ApplyResult is one of: metadata about an applied result or a stream of bytes
// of the output.
type ApplyResult struct {
	// Types that are valid to be assigned to Msg:
	//	*ApplyResult_Metadata
	//	*ApplyResult_Output
	Msg isApplyResult_Msg `protobuf_oneof:"msg"`
}

func (m *ApplyResult) Reset()                    { *m = ApplyResult{} }
func (m *ApplyResult) String() string            { return proto.CompactTextString(m) }
func (*ApplyResult) ProtoMessage()               {}
func (*ApplyResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isApplyResult_Msg interface {
	isApplyResult_Msg()
}

type ApplyResult_Metadata struct {
	Metadata *ApplyResultMetadata `protobuf:"bytes,1,opt,name=metadata,oneof"`
}
type ApplyResult_Output struct {
	Output *ApplyResultOutput `protobuf:"bytes,2,opt,name=output,oneof"`
}

func (*ApplyResult_Metadata) isApplyResult_Msg() {}
func (*ApplyResult_Output) isApplyResult_Msg()   {}

func (m *ApplyResult) GetMsg() isApplyResult_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *ApplyResult) GetMetadata() *ApplyResultMetadata {
	if x, ok := m.GetMsg().(*ApplyResult_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (m *ApplyResult) GetOutput() *ApplyResultOutput {
	if x, ok := m.GetMsg().(*ApplyResult_Output); ok {
		return x.Output
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ApplyResult) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ApplyResult_OneofMarshaler, _ApplyResult_OneofUnmarshaler, _ApplyResult_OneofSizer, []interface{}{
		(*ApplyResult_Metadata)(nil),
		(*ApplyResult_Output)(nil),
	}
}

func _ApplyResult_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ApplyResult)
	// msg
	switch x := m.Msg.(type) {
	case *ApplyResult_Metadata:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Metadata); err != nil {
			return err
		}
	case *ApplyResult_Output:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Output); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ApplyResult.Msg has unexpected type %T", x)
	}
	return nil
}

func _ApplyResult_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ApplyResult)
	switch tag {
	case 1: // msg.metadata
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ApplyResultMetadata)
		err := b.DecodeMessage(msg)
		m.Msg = &ApplyResult_Metadata{msg}
		return true, err
	case 2: // msg.output
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ApplyResultOutput)
		err := b.DecodeMessage(msg)
		m.Msg = &ApplyResult_Output{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ApplyResult_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ApplyResult)
	// msg
	switch x := m.Msg.(type) {
	case *ApplyResult_Metadata:
		s := proto.Size(x.Metadata)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ApplyResult_Output:
		s := proto.Size(x.Output)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The result of one config item's apply, not the whole config file.
type ApplyResultMetadata struct {
	// Process exit code, if any.
	ExitCode int32 `protobuf:"varint,1,opt,name=exit_code,json=exitCode" json:"exit_code,omitempty"`
	// what happened for the , if anything
	Result ApplyResultMetadata_Outcome `protobuf:"varint,2,opt,name=result,enum=ApplyResultMetadata_Outcome" json:"result,omitempty"`
	// some description/path to the specific toml item executed
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *ApplyResultMetadata) Reset()                    { *m = ApplyResultMetadata{} }
func (m *ApplyResultMetadata) String() string            { return proto.CompactTextString(m) }
func (*ApplyResultMetadata) ProtoMessage()               {}
func (*ApplyResultMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ApplyResultMetadata) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *ApplyResultMetadata) GetResult() ApplyResultMetadata_Outcome {
	if m != nil {
		return m.Result
	}
	return ApplyResultMetadata_UNKNOWN
}

func (m *ApplyResultMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ApplyResultOutput struct {
	// raw bytes of the output
	Output []byte `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
}

func (m *ApplyResultOutput) Reset()                    { *m = ApplyResultOutput{} }
func (m *ApplyResultOutput) String() string            { return proto.CompactTextString(m) }
func (*ApplyResultOutput) ProtoMessage()               {}
func (*ApplyResultOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ApplyResultOutput) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

// A TOML config
type Config struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Config) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// An outcome of a Plan
type PlanResult struct {
}

func (m *PlanResult) Reset()                    { *m = PlanResult{} }
func (m *PlanResult) String() string            { return proto.CompactTextString(m) }
func (*PlanResult) ProtoMessage()               {}
func (*PlanResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*ApplyResult)(nil), "ApplyResult")
	proto.RegisterType((*ApplyResultMetadata)(nil), "ApplyResultMetadata")
	proto.RegisterType((*ApplyResultOutput)(nil), "ApplyResultOutput")
	proto.RegisterType((*Config)(nil), "Config")
	proto.RegisterType((*PlanResult)(nil), "PlanResult")
	proto.RegisterEnum("ApplyResultMetadata_Outcome", ApplyResultMetadata_Outcome_name, ApplyResultMetadata_Outcome_value)
	proto.RegisterEnum("ApplyResultOutput_OutputType", ApplyResultOutput_OutputType_name, ApplyResultOutput_OutputType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HPT service

type HPTClient interface {
	Apply(ctx context.Context, in *Config, opts ...grpc.CallOption) (HPT_ApplyClient, error)
	Plan(ctx context.Context, in *Config, opts ...grpc.CallOption) (*PlanResult, error)
}

type hPTClient struct {
	cc *grpc.ClientConn
}

func NewHPTClient(cc *grpc.ClientConn) HPTClient {
	return &hPTClient{cc}
}

func (c *hPTClient) Apply(ctx context.Context, in *Config, opts ...grpc.CallOption) (HPT_ApplyClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_HPT_serviceDesc.Streams[0], c.cc, "/HPT/Apply", opts...)
	if err != nil {
		return nil, err
	}
	x := &hPTApplyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HPT_ApplyClient interface {
	Recv() (*ApplyResult, error)
	grpc.ClientStream
}

type hPTApplyClient struct {
	grpc.ClientStream
}

func (x *hPTApplyClient) Recv() (*ApplyResult, error) {
	m := new(ApplyResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hPTClient) Plan(ctx context.Context, in *Config, opts ...grpc.CallOption) (*PlanResult, error) {
	out := new(PlanResult)
	err := grpc.Invoke(ctx, "/HPT/Plan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HPT service

type HPTServer interface {
	Apply(*Config, HPT_ApplyServer) error
	Plan(context.Context, *Config) (*PlanResult, error)
}

func RegisterHPTServer(s *grpc.Server, srv HPTServer) {
	s.RegisterService(&_HPT_serviceDesc, srv)
}

func _HPT_Apply_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Config)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HPTServer).Apply(m, &hPTApplyServer{stream})
}

type HPT_ApplyServer interface {
	Send(*ApplyResult) error
	grpc.ServerStream
}

type hPTApplyServer struct {
	grpc.ServerStream
}

func (x *hPTApplyServer) Send(m *ApplyResult) error {
	return x.ServerStream.SendMsg(m)
}

func _HPT_Plan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HPTServer).Plan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/HPT/Plan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HPTServer).Plan(ctx, req.(*Config))
	}
	return interceptor(ctx, in, info, handler)
}

var _HPT_serviceDesc = grpc.ServiceDesc{
	ServiceName: "HPT",
	HandlerType: (*HPTServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Plan",
			Handler:    _HPT_Plan_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Apply",
			Handler:       _HPT_Apply_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/hpt.proto",
}

func init() { proto.RegisterFile("proto/hpt.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x6f, 0x9b, 0x40,
	0x10, 0xc5, 0xc1, 0x04, 0x6c, 0x06, 0xda, 0xd2, 0x69, 0x55, 0x59, 0x6d, 0x54, 0x45, 0x7b, 0xca,
	0x21, 0xc2, 0x15, 0xed, 0xb5, 0x87, 0x18, 0xa3, 0x12, 0x55, 0x81, 0x68, 0x8b, 0x55, 0xa9, 0x97,
	0x8a, 0x98, 0xad, 0x43, 0x65, 0x58, 0x04, 0x4b, 0x14, 0x7f, 0xab, 0x7e, 0xc4, 0x8a, 0x05, 0xff,
	0x91, 0xe2, 0xdb, 0x1b, 0xe6, 0xf7, 0x86, 0x37, 0x30, 0xf0, 0xaa, 0xaa, 0xb9, 0xe0, 0xb3, 0x87,
	0x4a, 0xb8, 0x52, 0x91, 0x47, 0xb0, 0xae, 0xab, 0x6a, 0xb3, 0xa5, 0xac, 0x69, 0x37, 0x02, 0x3d,
	0x98, 0x14, 0x4c, 0xa4, 0x59, 0x2a, 0xd2, 0xa9, 0x7a, 0xa1, 0x5e, 0x5a, 0xde, 0x5b, 0xf7, 0xa8,
	0x7f, 0x3b, 0xf4, 0x42, 0x85, 0xee, 0x39, 0xbc, 0x02, 0x83, 0xb7, 0xa2, 0x6a, 0xc5, 0x74, 0x24,
	0x1d, 0x78, 0xec, 0x88, 0x65, 0x27, 0x54, 0xe8, 0xc0, 0xcc, 0x75, 0xd0, 0x8a, 0x66, 0x4d, 0xfe,
	0xa9, 0xf0, 0xe6, 0xc4, 0x60, 0xfc, 0x00, 0x26, 0x7b, 0xca, 0xc5, 0xef, 0x15, 0xcf, 0x98, 0x4c,
	0xa0, 0xd3, 0x49, 0xf7, 0xc0, 0xe7, 0x19, 0xc3, 0x2f, 0x60, 0xd4, 0x12, 0x97, 0x6f, 0x7a, 0xe9,
	0x9d, 0x9f, 0xca, 0xe6, 0xc6, 0xad, 0x58, 0xf1, 0x82, 0xd1, 0x81, 0x45, 0x84, 0xb3, 0x32, 0x2d,
	0xd8, 0x54, 0xbb, 0x50, 0x2f, 0x4d, 0x2a, 0x35, 0xf1, 0x60, 0x3c, 0x60, 0x68, 0xc1, 0x78, 0x19,
	0x7d, 0x8f, 0xe2, 0x9f, 0x91, 0xa3, 0x74, 0x85, 0x1f, 0x5e, 0x47, 0xdf, 0x82, 0x85, 0xa3, 0xe2,
	0x0b, 0x30, 0x97, 0xd1, 0xae, 0x1c, 0x91, 0xbf, 0xf0, 0xfa, 0xd9, 0x62, 0xf8, 0x6e, 0xbf, 0x7c,
	0x17, 0xd6, 0xde, 0xad, 0x49, 0xbe, 0x02, 0xf4, 0x44, 0xb2, 0xad, 0x18, 0x9a, 0xa0, 0xc7, 0x49,
	0x18, 0x50, 0x47, 0x41, 0x00, 0xe3, 0x47, 0xb2, 0x88, 0x97, 0x89, 0xa3, 0x0e, 0x3a, 0xa0, 0xd4,
	0x19, 0xa1, 0x0d, 0x13, 0x3f, 0xbe, 0x9d, 0xdf, 0x44, 0xc1, 0xc2, 0xd1, 0xc8, 0x39, 0x18, 0x3e,
	0x2f, 0xff, 0xe4, 0xeb, 0x2e, 0xfd, 0xfe, 0x6f, 0xd8, 0x54, 0x6a, 0x62, 0x03, 0xdc, 0x6d, 0xd2,
	0xb2, 0x0f, 0xe2, 0xdd, 0x80, 0x16, 0xde, 0x25, 0x48, 0x40, 0x97, 0xf1, 0x70, 0xec, 0xf6, 0xd6,
	0xf7, 0xf6, 0xf1, 0xe7, 0x21, 0xca, 0x27, 0x15, 0x3f, 0xc2, 0x59, 0x67, 0x3c, 0x20, 0x96, 0x7b,
	0x18, 0x44, 0x94, 0xb9, 0xfb, 0xeb, 0x6a, 0x9d, 0x8b, 0x87, 0xf6, 0xde, 0x5d, 0xf1, 0x62, 0x96,
	0x96, 0x4f, 0x39, 0x6f, 0x9b, 0x82, 0x67, 0xac, 0x2e, 0x8b, 0xb4, 0xec, 0xce, 0x66, 0xd6, 0x1f,
	0x50, 0xc3, 0xea, 0x47, 0x56, 0xdf, 0x1b, 0xb2, 0xfa, 0xfc, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x8c,
	0x4d, 0x37, 0x17, 0x57, 0x02, 0x00, 0x00,
}
